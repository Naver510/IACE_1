-- MySQL Script generated by MySQL Workbench
-- Sun May 18 13:51:59 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema sensor
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `sensor` ;

-- -----------------------------------------------------
-- Schema sensor
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `sensor` DEFAULT CHARACTER SET utf8 ;
USE `sensor` ;

-- -----------------------------------------------------
-- Table `sensor`.`SensorKeys`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sensor`.`SensorKeys` ;

CREATE TABLE IF NOT EXISTS `sensor`.`SensorKeys` (
  `idSensorKeys` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `IdentifierString` VARCHAR(45) NOT NULL,
  `Alias` VARCHAR(45) NULL,
  PRIMARY KEY (`idSensorKeys`),
  UNIQUE INDEX `idSensorKeys_UNIQUE` (`idSensorKeys` ASC) VISIBLE,
  UNIQUE INDEX `IdentifierString_UNIQUE` (`IdentifierString` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sensor`.`Reading`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sensor`.`Reading` ;

CREATE TABLE IF NOT EXISTS `sensor`.`Reading` (
  `idReading` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `SensorKeys_idSensorKeys` INT UNSIGNED NOT NULL,
  `Value` VARCHAR(45) NOT NULL,
  `ReadingTime` BIGINT NOT NULL,
  PRIMARY KEY (`idReading`),
  UNIQUE INDEX `idReading_UNIQUE` (`idReading` ASC) VISIBLE,
  INDEX `fk_Reading_SensorKeys_idx` (`SensorKeys_idSensorKeys` ASC) VISIBLE,
  CONSTRAINT `fk_Reading_SensorKeys`
    FOREIGN KEY (`SensorKeys_idSensorKeys`)
    REFERENCES `sensor`.`SensorKeys` (`idSensorKeys`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `sensor`.`SafeRange`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `sensor`.`SafeRange` ;

CREATE TABLE IF NOT EXISTS `sensor`.`SafeRange` (
  `SensorKeys_idSensorKeys` INT UNSIGNED NOT NULL,
  `SafeMin` FLOAT NULL,
  `SafeMax` FLOAT NULL,
  PRIMARY KEY (`SensorKeys_idSensorKeys`),
  CONSTRAINT `fk_SafeRange_SensorKeys1`
    FOREIGN KEY (`SensorKeys_idSensorKeys`)
    REFERENCES `sensor`.`SensorKeys` (`idSensorKeys`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE = '';
DROP USER IF EXISTS sensor;
SET SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
CREATE USER 'sensor' IDENTIFIED BY 'sensor';

GRANT ALL ON `sensor`.* TO 'sensor';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `sensor`.`SensorKeys`
-- -----------------------------------------------------
START TRANSACTION;
USE `sensor`;
INSERT INTO `sensor`.`SensorKeys` (`idSensorKeys`, `IdentifierString`, `Alias`) VALUES (1, 'KSLZPPARMMGS', 'Temp');
INSERT INTO `sensor`.`SensorKeys` (`idSensorKeys`, `IdentifierString`, `Alias`) VALUES (2, 'JGOIWAJOZOIR', 'Pred');
INSERT INTO `sensor`.`SensorKeys` (`idSensorKeys`, `IdentifierString`, `Alias`) VALUES (3, 'GJOIJZOKPOKW', 'Cisn');
INSERT INTO `sensor`.`SensorKeys` (`idSensorKeys`, `IdentifierString`, `Alias`) VALUES (4, 'OIJOJOJGWAZC', 'Wilg');

COMMIT;


-- -----------------------------------------------------
-- Data for table `sensor`.`SafeRange`
-- -----------------------------------------------------
START TRANSACTION;
USE `sensor`;
INSERT INTO `sensor`.`SafeRange` (`SensorKeys_idSensorKeys`, `SafeMin`, `SafeMax`) VALUES (1, 19, 30);
INSERT INTO `sensor`.`SafeRange` (`SensorKeys_idSensorKeys`, `SafeMin`, `SafeMax`) VALUES (2, 0, 4000);
INSERT INTO `sensor`.`SafeRange` (`SensorKeys_idSensorKeys`, `SafeMin`, `SafeMax`) VALUES (3, 995, 1020);
INSERT INTO `sensor`.`SafeRange` (`SensorKeys_idSensorKeys`, `SafeMin`, `SafeMax`) VALUES (4, 40, 55);

COMMIT;

